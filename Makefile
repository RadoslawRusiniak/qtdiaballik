#############################################################################
# Makefile for building: diaballik
# Generated by qmake (2.01a) (Qt 4.8.6) on: sob. sty 31 03:02:41 2015
# Project:  diaballik.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile diaballik.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ai.cpp \
		ball.cpp \
		board.cpp \
		field.cpp \
		game.cpp \
		gamestate.cpp \
		holder.cpp \
		interface.cpp \
		main.cpp \
		mainwindow.cpp \
		move.cpp \
		turn.cpp moc_ai.cpp \
		moc_board.cpp \
		moc_game.cpp \
		moc_gamestate.cpp \
		moc_interface.cpp \
		moc_mainwindow.cpp \
		moc_move.cpp \
		moc_turn.cpp
OBJECTS       = ai.o \
		ball.o \
		board.o \
		field.o \
		game.o \
		gamestate.o \
		holder.o \
		interface.o \
		main.o \
		mainwindow.o \
		move.o \
		turn.o \
		moc_ai.o \
		moc_board.o \
		moc_game.o \
		moc_gamestate.o \
		moc_interface.o \
		moc_mainwindow.o \
		moc_move.o \
		moc_turn.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		diaballik.pro
QMAKE_TARGET  = diaballik
DESTDIR       = 
TARGET        = diaballik

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: diaballik.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile diaballik.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile diaballik.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/diaballik1.0.0 || $(MKDIR) .tmp/diaballik1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/diaballik1.0.0/ && $(COPY_FILE) --parents ai.h ball.h board.h consts.h field.h game.h gamestate.h holder.h interface.h mainwindow.h move.h turn.h .tmp/diaballik1.0.0/ && $(COPY_FILE) --parents ai.cpp ball.cpp board.cpp field.cpp game.cpp gamestate.cpp holder.cpp interface.cpp main.cpp mainwindow.cpp move.cpp turn.cpp .tmp/diaballik1.0.0/ && (cd `dirname .tmp/diaballik1.0.0` && $(TAR) diaballik1.0.0.tar diaballik1.0.0 && $(COMPRESS) diaballik1.0.0.tar) && $(MOVE) `dirname .tmp/diaballik1.0.0`/diaballik1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/diaballik1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_ai.cpp moc_board.cpp moc_game.cpp moc_gamestate.cpp moc_interface.cpp moc_mainwindow.cpp moc_move.cpp moc_turn.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ai.cpp moc_board.cpp moc_game.cpp moc_gamestate.cpp moc_interface.cpp moc_mainwindow.cpp moc_move.cpp moc_turn.cpp
moc_ai.cpp: field.h \
		consts.h \
		holder.h \
		move.h \
		ball.h \
		ai.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ai.h -o moc_ai.cpp

moc_board.cpp: consts.h \
		ball.h \
		holder.h \
		field.h \
		move.h \
		turn.h \
		board.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) board.h -o moc_board.cpp

moc_game.cpp: ai.h \
		field.h \
		consts.h \
		holder.h \
		move.h \
		ball.h \
		board.h \
		turn.h \
		gamestate.h \
		game.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) game.h -o moc_game.cpp

moc_gamestate.cpp: consts.h \
		turn.h \
		ball.h \
		holder.h \
		move.h \
		field.h \
		gamestate.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) gamestate.h -o moc_gamestate.cpp

moc_interface.cpp: interface.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) interface.h -o moc_interface.cpp

moc_mainwindow.cpp: consts.h \
		interface.h \
		game.h \
		ai.h \
		field.h \
		holder.h \
		move.h \
		ball.h \
		board.h \
		turn.h \
		gamestate.h \
		mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_move.cpp: ball.h \
		consts.h \
		holder.h \
		field.h \
		move.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) move.h -o moc_move.cpp

moc_turn.cpp: consts.h \
		ball.h \
		holder.h \
		move.h \
		field.h \
		turn.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) turn.h -o moc_turn.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

ai.o: ai.cpp ai.h \
		field.h \
		consts.h \
		holder.h \
		move.h \
		ball.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ai.o ai.cpp

ball.o: ball.cpp ball.h \
		consts.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ball.o ball.cpp

board.o: board.cpp board.h \
		consts.h \
		ball.h \
		holder.h \
		field.h \
		move.h \
		turn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o board.o board.cpp

field.o: field.cpp field.h \
		consts.h \
		holder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o field.o field.cpp

game.o: game.cpp game.h \
		ai.h \
		field.h \
		consts.h \
		holder.h \
		move.h \
		ball.h \
		board.h \
		turn.h \
		gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

gamestate.o: gamestate.cpp gamestate.h \
		consts.h \
		turn.h \
		ball.h \
		holder.h \
		move.h \
		field.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamestate.o gamestate.cpp

holder.o: holder.cpp holder.h \
		consts.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o holder.o holder.cpp

interface.o: interface.cpp interface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interface.o interface.cpp

main.o: main.cpp mainwindow.h \
		consts.h \
		interface.h \
		game.h \
		ai.h \
		field.h \
		holder.h \
		move.h \
		ball.h \
		board.h \
		turn.h \
		gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		consts.h \
		interface.h \
		game.h \
		ai.h \
		field.h \
		holder.h \
		move.h \
		ball.h \
		board.h \
		turn.h \
		gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

move.o: move.cpp move.h \
		ball.h \
		consts.h \
		holder.h \
		field.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o move.o move.cpp

turn.o: turn.cpp turn.h \
		consts.h \
		ball.h \
		holder.h \
		move.h \
		field.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o turn.o turn.cpp

moc_ai.o: moc_ai.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ai.o moc_ai.cpp

moc_board.o: moc_board.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_board.o moc_board.cpp

moc_game.o: moc_game.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_game.o moc_game.cpp

moc_gamestate.o: moc_gamestate.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamestate.o moc_gamestate.cpp

moc_interface.o: moc_interface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_interface.o moc_interface.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_move.o: moc_move.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_move.o moc_move.cpp

moc_turn.o: moc_turn.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_turn.o moc_turn.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

